name: Publish New Version
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'New version number'
        required: true
      previousVersion:
        description: 'Last version number'
        required: true
jobs:
  build:
    strategy:
      matrix:
        java: [ 17 ]
        os: [ ubuntu-20.04 ]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2.4.0
      with:
        fetch-depth: 0
    - name: Create version tag
      uses: actions/github-script@v3
      with:
        github-token: ${{ github.token }}
        script: |
          github.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: "refs/tags/v${{ github.event.inputs.version }}",
            sha: context.sha
          })
    - name: Fetch tags
      run: git fetch --tags
    - name: Gradle Wrapper Validation
      uses: gradle/wrapper-validation-action@v1.0.4
    - name: Setup Java JDK
      uses: actions/setup-java@v2.4.0
      with:
        java-version: ${{ matrix.java }}
    - name: Make Gradle wrapper executable
      if: ${{ runner.os != 'Windows' }}
      run: chmod +x ./gradlew
    - name: Build with Gradle
      uses: gradle/gradle-build-action@4137be6a8bf7d7133955359dbd952c0ca73b1021
      with:
        gradle-version: 7.2
        arguments: downloadTranslations generateChangelog build curseforge github --stacktrace --parallel -PlastTag="v${{ github.event.inputs.previousVersion }}" -PcurrentTag="v${{ github.event.inputs.version }}"
      env:
        CURSEFORGE_TOKEN: ${{ secrets.CURSEFORGE_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GH_API_TOKEN }}
    # The USERNAME and TOKEN need to correspond to the credentials environment variables used in
    # the publishing section of your build.gradle
    - name: Capture build artifacts
      uses: actions/upload-artifact@v2.3.1
      with:
        name: Artifacts
        path: build/libs/
